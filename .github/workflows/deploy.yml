name: EC2에 프론트엔드 배포하기

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 환경 변수 파일 생성
        run: |
          echo "REACT_APP_KAKAO_KEY=${{ secrets.REACT_APP_KAKAO_KEY }}" >> .env
          echo "REACT_APP_SPRING_SERVER_UPLOAD_URL=${{ secrets.REACT_APP_SPRING_SERVER_UPLOAD_URL }}" >> .env
          echo "REACT_APP_SPRING_SERVER=${{ secrets.REACT_APP_SPRING_SERVER }}" >> .env
          echo "REACT_APP_KAKAO_RESTAPIKEY=${{ secrets.REACT_APP_KAKAO_RESTAPIKEY }}" >> .env
          echo "REACT_APP_SERVER=${{ secrets.REACT_APP_SERVER }}" >> .env

      - name: 의존성 설치
        run: npm i

      - name: React 앱 빌드
        run: CI=false npm run build

      - name: AWS 자격 증명 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Amazon ECR 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 이미지 빌드, 태그 지정 및 Amazon ECR에 푸시
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mhnfrontend
          IMAGE_TAG: latest
        run: |
          docker build --build-arg REACT_APP_KAKAO_KEY=${{ secrets.REACT_APP_KAKAO_KEY }} \
                       --build-arg REACT_APP_SPRING_SERVER_UPLOAD_URL=${{ secrets.REACT_APP_SPRING_SERVER_UPLOAD_URL }} \
                       --build-arg REACT_APP_SPRING_SERVER=${{ secrets.REACT_APP_SPRING_SERVER }} \
                       --build-arg REACT_APP_KAKAO_RESTAPIKEY=${{ secrets.REACT_APP_KAKAO_RESTAPIKEY }} \
                       --build-arg REACT_APP_SERVER=${{ secrets.REACT_APP_SERVER }} \
                       -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: EC2에 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            docker pull ${{ steps.login-ecr.outputs.registry }}/mhnfrontend:latest
            docker stop mhnfrontend || true
            docker rm mhnfrontend || true
            docker network create mhn-network || true
            docker run -d --name mhnfrontend --network mhn-network -p 80:80 \
              -e REACT_APP_KAKAO_KEY=${{ secrets.REACT_APP_KAKAO_KEY }} \
              -e REACT_APP_SPRING_SERVER_UPLOAD_URL=${{ secrets.REACT_APP_SPRING_SERVER_UPLOAD_URL }} \
              -e REACT_APP_SPRING_SERVER=${{ secrets.REACT_APP_SPRING_SERVER }} \
              -e REACT_APP_KAKAO_RESTAPIKEY=${{ secrets.REACT_APP_KAKAO_RESTAPIKEY }} \
              -e REACT_APP_SERVER=${{ secrets.REACT_APP_SERVER }} \
              ${{ steps.login-ecr.outputs.registry }}/mhnfrontend:latest
            docker network connect mhn-network mhnapiserver || true
################